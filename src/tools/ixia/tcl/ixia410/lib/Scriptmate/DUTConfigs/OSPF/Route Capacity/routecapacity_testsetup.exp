#Copyright (c) Ixia 2003-2005
#All rights reserved.


#------------------------------------------------------------------------------ 
# DESCRIPTION : This script sets up the DUT for OSPF Route Capacity test.
#   Two DUT interfaces are configured with the values defined in common script.               
#               
#
# ARGUMENTS   : 
#        DUT_HOSTNAME - This hostame of the DUT.
#-------------------------------------------------------------------------------

# Include common functions
#--------------------------
set SCRIPT_DIR [file dirname [file dirname $argv0]];

source "$SCRIPT_DIR/ospf_common.tcl"

# Validating script arguments
#----------------------------
 if {[llength $argv] < 1} {
  puts \
    "ERROR: Invalid number of arguments\
   \nUSAGE: script\
   \n       DUT_HOSTNAME"
    exit
}

# Obtaining script arguments
#----------------------------

  set DUT_HOSTNAME             [lindex $argv 0]  


  
# Test Specific requirements(e.g. interface mapping)
#---------------------------------------------------

# Connecting to the DUT
#------------------------------------------------------

Connect $DUT_HOSTNAME $DUT_USER_PASSWORD

# Configure test specific information
#-------------------------------------

  send "config ter\n"
  expect $DUT_PROMPT

# Configure Interface addresses
#------------------------------

# DUT Interface 0
# ----------------

  send "interface $DUT_INTERFACE_0\n"
  expect $DUT_PROMPT
      
  send "ip address $DIFACE0_IP_ADDRESS $DIFACE0_SUBNET_MASK\n"
  expect $DUT_PROMPT

  send "no shutdown\n"
  expect $DUT_PROMPT

  send "exit\n"
  expect $DUT_PROMPT




# DUT Interface 1
# ----------------

  send "interface $DUT_INTERFACE_1\n"
  expect $DUT_PROMPT
      
  send "ip address $DIFACE1_IP_ADDRESS $DIFACE1_SUBNET_MASK\n"
  expect $DUT_PROMPT

  send "no shutdown\n"
  expect $DUT_PROMPT

  send "exit\n"
  expect $DUT_PROMPT

# Configure router process
# ------------------------

  send "router ospf $ROUTER_OSPF_PROCESS_ID\n"
  expect $DUT_PROMPT


# Configuring the ospf networks
# --------------------------------

# Interface 1  
#-------------
  send "network $DIFACE0_IP_ADDRESS $WILDCARD_BITS \
        area $AREA_ID\n"
  expect $DUT_PROMPT
  
# Interface 2
#------------
  #
  #send "network $DIFACE1_IP_ADDRESS $WILDCARD_BITS \
  #      area $AREA_ID\n"
  #expect $DUT_PROMPT


# Exiting router configuration
# ----------------------------

  send "exit\n"
  expect $DUT_PROMPT 

# Saving and quitting
#--------------------

  ExitDut

# End of File
#-------------  

 

