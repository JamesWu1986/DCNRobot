*** Settings ***
Documentation     驱动测试
...
...
...               测试注意事项说明:
...               - *执行前需要修改vars_topo文件*
...
...
...               测试拓扑:
...
...               tp1----s1p1 \ \ \ 主测端口
...
...               tp2----s1p2 \ \ \ 辅测端口
...
...               s1p3 \ \ \ \ \ \ \ \ \ \ \ \ 辅测端口
...
...               需要保证s1p1,s1p2速率相同,s1p3尽量与s1p1速率相同,或者小于s1p1.
...
...               已自动化的子功能:
...               - storm-control
...
...
...               本用例仅针对单个主测端口进行相关功能测试,实际使用时应针对产品硬件设计覆盖以下内容:
...               - 覆盖所有端口类型
...               - 100M-Copper,100M-Fiber,1G-Copper,1G-Fiber,10G-Fiber,40G光模块及线缆,Combo-Copper,Combo-Fiber
...               - 根据芯片覆盖跨芯片,跨板卡,跨堆叠member(部分功能不支持跨芯片,跨板卡,跨堆叠member,用例执行时会根据全局变量CROSS_XXX来判断,若功能不支持则自动跳过,并在log文件中以"WARN"提示)
Suite Setup       Init Driver Test
Suite Teardown    Uninit Driver Test
Force Tags        driver
Resource          resource_driver.txt

*** Variables ***

*** Keywords ***
Init Driver Test
    [Documentation]    初始化驱动测试例
    ...    - 1.检查拓扑
    ...    - 2.初始化S1的配置
    Open Console    ${s1_ccm_ip}    ${s1_ccm_port}    ${s1_alias}
    tools.comment    !!START!! ${SUITE_NAME}
    Check Topo
    set driver var
    set watchdog disable    ${s1_alias}
    Show Version    ${s1_alias}
    Close Console    ${s1_alias}

Check Topo
    [Documentation]    拓扑检查
    ...
    ...    检查s1p1与s1p2应该是up状态,否则初始化检查失败停止运行
    ${s1p1_status}=    CheckPortUpdown    ${s1_alias}    ${s1p1}
    Should Be True    ${s1p1_status}    !!interface ${s1p1} \ isn't up!!
    ${s1p2_status}=    CheckPortUpdown    ${s1_alias}    ${s1p2}
    Should Be True    ${s1p2_status}    !!interface ${s1p2} \ isn't up!!

Uninit Driver Test
    [Documentation]    恢复配置
    log    !!END!! ${SUITE_NAME}

set driver var
    ${S1P1_HW}=    Get Port Hardware    ${s1_alias}    ${s1p1}
    ${S1P1_MAX_SPD}=    Get Port Status    ${s1_alias}    ${s1p1}    maxSpeed
    ${S1P2_HW}=    Get Port Hardware    ${s1_alias}    ${s1p2}
    ${S1P2_MAX_SPD}=    Get Port Status    ${s1_alias}    ${s1p2}    maxSpeed
    Set Global Variable    ${S1P1_HW}
    Set Global Variable    ${S1P1_MAX_SPD}
    Set Global Variable    ${S1P2_HW}
    Set Global Variable    ${S1P2_MAX_SPD}
    ${s1_vlan_mac}=    Get Vlan Mac    ${s1_alias}
    Set Global Variable    ${S1_VLAN_MAC}    ${s1_vlan_mac}
