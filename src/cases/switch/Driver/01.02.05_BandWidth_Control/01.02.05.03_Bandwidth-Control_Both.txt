*** Settings ***
Documentation     测试点:端口"收发"方向带宽限制功能正确,不同方向之间的限速配置不会互相影响,在同一芯片的不同端口上配置带宽限制相互之间不影响
...
...               - Step1 检查缺省情况下端口没有广播抑制配置
...               - Step2 验证端口同时配置入方向及出方向带宽限制时,功能各自生效。
...               - Step3 配置both方向的带宽限制，开启带宽限制,流量受限,关闭带宽限制,流量恢复正常
...               - Step4 其他端口的带宽限制功能,不影响当前端口的带宽限制
Suite Setup       Init Suite Test
Suite Teardown    Uninit Suite Test
Resource          resource_bandwidth_control.txt

*** Test Cases ***
01_双方向带宽限制功能生效
    [Documentation]    验证端口同时配置入方向及出方向带宽限制时,功能各自生效。
    [Setup]    01_init
    tools.Comment    检查双方向端口带宽限制功能生效.选择10个值来测试
    \    #入口带宽限制（kbps）    #出口带宽限制(kbps)    #误差范围(0~1)
    set and check    1000    50000    0.05
    set and check    1250    20000    0.05
    set and check    1500    17777    0.05
    set and check    2000    15234    0.05
    set and check    10000    10000    0.05
    set and check    15234    2000    0.05
    set and check    17777    1500    0.05
    set and check    20000    1250    0.05
    set and check    50000    1000    0.05
    [Teardown]    01_uninit

02_带流量开关带宽限制,功能正确生效
    [Documentation]    配置both方向的带宽限制，功能正确生效。
    [Setup]    02_init
    tools.Comment    配置both方向的带宽限制，开启带宽限制,流量受限,关闭带宽限制,流量恢复正常
    Ixiasend.Start Transmit    @{testerp1}
    Ixiasend.Start Transmit    @{testerp2}
    #配置带宽限制,缺省both方向均生效
    ${receive_rate}=    Set Bandwidth Control    ${s1_alias}    ${s1p1}    10000
    ${res1}=    CheckIxiaReceiveRate    @{testerp2}    bps    ${receive_rate}
    ${res2}=    CheckIxiaReceiveRate    @{testerp1}    bps    ${receive_rate}
    #删除带宽限制,流量恢复
    Unset Bandwidth Control    ${s1_alias}    ${s1p1}
    ${res3}=    CheckIxiaReceiveRate    @{testerp2}    bps    80000000
    ${res4}=    CheckIxiaReceiveRate    @{testerp1}    bps    80000000
    Should Be True    ${res1}==${res2}==${res3}==${res4}==${TRUE}    ${TEST_NAME}Check Error.
    [Teardown]    02_uninit

03_多个端口上配置带宽控制,不会互相影响
    [Setup]    03_init
    tools.Comment    其他端口的带宽限制功能,不影响当前端口的带宽限制
    Ixiasend.Start Transmit    @{testerp1}
    Ixiasend.Start Transmit    @{testerp2}
    #s1p3的带宽限制配置,不影响s1p1端口的配置
    Set Bandwidth Control    ${s1_alias}    ${s1p3}    500
    ${res1}=    CheckIxiaReceiveRate    @{testerp2}    bps    received_rate=80000000
    ${res2}=    CheckIxiaReceiveRate    @{testerp1}    bps    received_rate=80000000
    ${receive_rate}=    Set Bandwidth Control    ${s1_alias}    ${s1p1}    10000
    ${res3}=    CheckIxiaReceiveRate    @{testerp2}    bps    ${receive_rate}
    ${res4}=    CheckIxiaReceiveRate    @{testerp1}    bps    ${receive_rate}
    unset Bandwidth Control    ${s1_alias}    ${s1p3}
    ${res5}=    CheckIxiaReceiveRate    @{testerp2}    bps    ${receive_rate}
    ${res6}=    CheckIxiaReceiveRate    @{testerp1}    bps    ${receive_rate}
    Should Be True    ${res1}==${res2}==${res3}==${res4}==${res5}==${res6}==${TRUE}    ${TEST_NAME} Check Error.
    [Teardown]    03_uninit

*** Keywords ***
set and check
    [Arguments]    ${in_cfg_value}    ${out_cfg_value}    ${tolerance}=0.05
    [Documentation]    验证端口同时配置入方向及出方向带宽限制时,功能各自生效。
    tools.Comment    检查入方向带宽控制功能
    ${receive_rate}=    Set Bandwidth Control    ${s1_alias}    ${s1p1}    ${in_cfg_value}    direction=receive
    Ixiasend.Start Transmit    @{testerp1}
    sleep    2s    等待桶令牌耗尽
    ${res1}=    CheckIxiaReceiveRate    @{testerp2}    bps    ${receive_rate}    ${tolerance}
    Ixiasend.Stop Transmit    @{testerp1}
    tools.Comment    检查出方向带宽控制功能
    ${receive_rate}=    Set Bandwidth Control    ${s1_alias}    ${s1p1}    ${out_cfg_value}    direction=transmit
    Ixiasend.Start Transmit    @{testerp2}
    sleep    2s    等待桶令牌耗尽
    ${res2}=    CheckIxiaReceiveRate    @{testerp1}    bps    ${receive_rate}    ${tolerance}
    Ixiasend.Stop Transmit    @{testerp2}
    Run Keyword And Continue On Failure    Should Be True    ${res1}&${res2}    For Loop ${LOOP}: bandwidth control input ${in_cfg_value}kbps, ouput ${out_cfg_value} kbps ,Check Error!!
    Set Suite Variable    ${LOOP}    ${${LOOP}+1}

01_init
    Set Suite Variable    ${LOOP}    ${1}
    Set ixia stream ip    @{testerp1}    stream_rate=80000000    stream_rate_mode=${IXIA_StreamRateMode_bps}    reset=True
    Set ixia stream ip    @{testerp2}    stream_rate=80000000    stream_rate_mode=${IXIA_StreamRateMode_bps}    reset=True

01_uninit
    Unset Bandwidth Control    ${s1_alias}    ${s1p1}
    Ixiasend.Stop Transmit    @{testerp1}
    Ixiasend.Stop Transmit    @{testerp2}
    Ixia.Set Port Mode Default    @{testerp1}
    Ixia.Set Port Mode Default    @{testerp2}

02_init
    Set ixia stream ip    @{testerp1}    stream_rate=80000000    stream_rate_mode=${IXIA_StreamRateMode_bps}    reset=True
    Set ixia stream ip    @{testerp2}    stream_rate=80000000    stream_rate_mode=${IXIA_StreamRateMode_bps}    reset=True

02_uninit
    Unset Bandwidth Control    ${s1_alias}    ${s1p1}
    Ixiasend.Stop Transmit    @{testerp1}
    Ixiasend.Stop Transmit    @{testerp2}
    Ixia.Set Port Mode Default    @{testerp1}
    Ixia.Set Port Mode Default    @{testerp2}

03_init
    Set ixia stream ip    @{testerp1}    stream_rate=80000000    stream_rate_mode=${IXIA_StreamRateMode_bps}    reset=True
    Set ixia stream ip    @{testerp2}    stream_rate=80000000    stream_rate_mode=${IXIA_StreamRateMode_bps}    reset=True

03_uninit
    Unset Bandwidth Control    ${s1_alias}    ${s1p1}
    Unset Bandwidth Control    ${s1_alias}    ${s1p3}
    Ixiasend.Stop Transmit    @{testerp1}
    Ixiasend.Stop Transmit    @{testerp2}
    Ixia.Set Port Mode Default    @{testerp1}
    Ixia.Set Port Mode Default    @{testerp2}
